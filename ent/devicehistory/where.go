// Code generated by ent, DO NOT EDIT.

package devicehistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/cateiru/sesami-2-mackerel/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldID, id))
}

// DeviceUUID applies equality check predicate on the "device_uuid" field. It's identical to DeviceUUIDEQ.
func DeviceUUID(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldDeviceUUID, v))
}

// EventType applies equality check predicate on the "event_type" field. It's identical to EventTypeEQ.
func EventType(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldEventType, v))
}

// Timestamp applies equality check predicate on the "timestamp" field. It's identical to TimestampEQ.
func Timestamp(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldTimestamp, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldUserID, v))
}

// Tag applies equality check predicate on the "tag" field. It's identical to TagEQ.
func Tag(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldTag, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// DeviceUUIDEQ applies the EQ predicate on the "device_uuid" field.
func DeviceUUIDEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldDeviceUUID, v))
}

// DeviceUUIDNEQ applies the NEQ predicate on the "device_uuid" field.
func DeviceUUIDNEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldDeviceUUID, v))
}

// DeviceUUIDIn applies the In predicate on the "device_uuid" field.
func DeviceUUIDIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldDeviceUUID, vs...))
}

// DeviceUUIDNotIn applies the NotIn predicate on the "device_uuid" field.
func DeviceUUIDNotIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldDeviceUUID, vs...))
}

// DeviceUUIDGT applies the GT predicate on the "device_uuid" field.
func DeviceUUIDGT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldDeviceUUID, v))
}

// DeviceUUIDGTE applies the GTE predicate on the "device_uuid" field.
func DeviceUUIDGTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldDeviceUUID, v))
}

// DeviceUUIDLT applies the LT predicate on the "device_uuid" field.
func DeviceUUIDLT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldDeviceUUID, v))
}

// DeviceUUIDLTE applies the LTE predicate on the "device_uuid" field.
func DeviceUUIDLTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldDeviceUUID, v))
}

// DeviceUUIDContains applies the Contains predicate on the "device_uuid" field.
func DeviceUUIDContains(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContains(FieldDeviceUUID, v))
}

// DeviceUUIDHasPrefix applies the HasPrefix predicate on the "device_uuid" field.
func DeviceUUIDHasPrefix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasPrefix(FieldDeviceUUID, v))
}

// DeviceUUIDHasSuffix applies the HasSuffix predicate on the "device_uuid" field.
func DeviceUUIDHasSuffix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasSuffix(FieldDeviceUUID, v))
}

// DeviceUUIDEqualFold applies the EqualFold predicate on the "device_uuid" field.
func DeviceUUIDEqualFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEqualFold(FieldDeviceUUID, v))
}

// DeviceUUIDContainsFold applies the ContainsFold predicate on the "device_uuid" field.
func DeviceUUIDContainsFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContainsFold(FieldDeviceUUID, v))
}

// EventTypeEQ applies the EQ predicate on the "event_type" field.
func EventTypeEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldEventType, v))
}

// EventTypeNEQ applies the NEQ predicate on the "event_type" field.
func EventTypeNEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldEventType, v))
}

// EventTypeIn applies the In predicate on the "event_type" field.
func EventTypeIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldEventType, vs...))
}

// EventTypeNotIn applies the NotIn predicate on the "event_type" field.
func EventTypeNotIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldEventType, vs...))
}

// EventTypeGT applies the GT predicate on the "event_type" field.
func EventTypeGT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldEventType, v))
}

// EventTypeGTE applies the GTE predicate on the "event_type" field.
func EventTypeGTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldEventType, v))
}

// EventTypeLT applies the LT predicate on the "event_type" field.
func EventTypeLT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldEventType, v))
}

// EventTypeLTE applies the LTE predicate on the "event_type" field.
func EventTypeLTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldEventType, v))
}

// EventTypeContains applies the Contains predicate on the "event_type" field.
func EventTypeContains(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContains(FieldEventType, v))
}

// EventTypeHasPrefix applies the HasPrefix predicate on the "event_type" field.
func EventTypeHasPrefix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasPrefix(FieldEventType, v))
}

// EventTypeHasSuffix applies the HasSuffix predicate on the "event_type" field.
func EventTypeHasSuffix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasSuffix(FieldEventType, v))
}

// EventTypeEqualFold applies the EqualFold predicate on the "event_type" field.
func EventTypeEqualFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEqualFold(FieldEventType, v))
}

// EventTypeContainsFold applies the ContainsFold predicate on the "event_type" field.
func EventTypeContainsFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContainsFold(FieldEventType, v))
}

// TimestampEQ applies the EQ predicate on the "timestamp" field.
func TimestampEQ(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldTimestamp, v))
}

// TimestampNEQ applies the NEQ predicate on the "timestamp" field.
func TimestampNEQ(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldTimestamp, v))
}

// TimestampIn applies the In predicate on the "timestamp" field.
func TimestampIn(vs ...int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldTimestamp, vs...))
}

// TimestampNotIn applies the NotIn predicate on the "timestamp" field.
func TimestampNotIn(vs ...int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldTimestamp, vs...))
}

// TimestampGT applies the GT predicate on the "timestamp" field.
func TimestampGT(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldTimestamp, v))
}

// TimestampGTE applies the GTE predicate on the "timestamp" field.
func TimestampGTE(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldTimestamp, v))
}

// TimestampLT applies the LT predicate on the "timestamp" field.
func TimestampLT(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldTimestamp, v))
}

// TimestampLTE applies the LTE predicate on the "timestamp" field.
func TimestampLTE(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldTimestamp, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotNull(FieldUserID))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContainsFold(FieldUserID, v))
}

// TagEQ applies the EQ predicate on the "tag" field.
func TagEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldTag, v))
}

// TagNEQ applies the NEQ predicate on the "tag" field.
func TagNEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldTag, v))
}

// TagIn applies the In predicate on the "tag" field.
func TagIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldTag, vs...))
}

// TagNotIn applies the NotIn predicate on the "tag" field.
func TagNotIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldTag, vs...))
}

// TagGT applies the GT predicate on the "tag" field.
func TagGT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldTag, v))
}

// TagGTE applies the GTE predicate on the "tag" field.
func TagGTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldTag, v))
}

// TagLT applies the LT predicate on the "tag" field.
func TagLT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldTag, v))
}

// TagLTE applies the LTE predicate on the "tag" field.
func TagLTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldTag, v))
}

// TagContains applies the Contains predicate on the "tag" field.
func TagContains(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContains(FieldTag, v))
}

// TagHasPrefix applies the HasPrefix predicate on the "tag" field.
func TagHasPrefix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasPrefix(FieldTag, v))
}

// TagHasSuffix applies the HasSuffix predicate on the "tag" field.
func TagHasSuffix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasSuffix(FieldTag, v))
}

// TagIsNil applies the IsNil predicate on the "tag" field.
func TagIsNil() predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIsNull(FieldTag))
}

// TagNotNil applies the NotNil predicate on the "tag" field.
func TagNotNil() predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotNull(FieldTag))
}

// TagEqualFold applies the EqualFold predicate on the "tag" field.
func TagEqualFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEqualFold(FieldTag, v))
}

// TagContainsFold applies the ContainsFold predicate on the "tag" field.
func TagContainsFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContainsFold(FieldTag, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.DeviceHistory) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.DeviceHistory) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.DeviceHistory) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.NotPredicates(p))
}
