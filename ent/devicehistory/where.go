// Code generated by ent, DO NOT EDIT.

package devicehistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/cateiru/sesami-2-mackerel/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldID, id))
}

// DeviceUUID applies equality check predicate on the "device_uuid" field. It's identical to DeviceUUIDEQ.
func DeviceUUID(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldDeviceUUID, v))
}

// EventType applies equality check predicate on the "event_type" field. It's identical to EventTypeEQ.
func EventType(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldEventType, v))
}

// Timestamp applies equality check predicate on the "timestamp" field. It's identical to TimestampEQ.
func Timestamp(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldTimestamp, v))
}

// HistoryTag applies equality check predicate on the "history_tag" field. It's identical to HistoryTagEQ.
func HistoryTag(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldHistoryTag, v))
}

// RecordID applies equality check predicate on the "record_id" field. It's identical to RecordIDEQ.
func RecordID(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldRecordID, v))
}

// Parameter applies equality check predicate on the "parameter" field. It's identical to ParameterEQ.
func Parameter(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldParameter, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// DeviceUUIDEQ applies the EQ predicate on the "device_uuid" field.
func DeviceUUIDEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldDeviceUUID, v))
}

// DeviceUUIDNEQ applies the NEQ predicate on the "device_uuid" field.
func DeviceUUIDNEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldDeviceUUID, v))
}

// DeviceUUIDIn applies the In predicate on the "device_uuid" field.
func DeviceUUIDIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldDeviceUUID, vs...))
}

// DeviceUUIDNotIn applies the NotIn predicate on the "device_uuid" field.
func DeviceUUIDNotIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldDeviceUUID, vs...))
}

// DeviceUUIDGT applies the GT predicate on the "device_uuid" field.
func DeviceUUIDGT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldDeviceUUID, v))
}

// DeviceUUIDGTE applies the GTE predicate on the "device_uuid" field.
func DeviceUUIDGTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldDeviceUUID, v))
}

// DeviceUUIDLT applies the LT predicate on the "device_uuid" field.
func DeviceUUIDLT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldDeviceUUID, v))
}

// DeviceUUIDLTE applies the LTE predicate on the "device_uuid" field.
func DeviceUUIDLTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldDeviceUUID, v))
}

// DeviceUUIDContains applies the Contains predicate on the "device_uuid" field.
func DeviceUUIDContains(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContains(FieldDeviceUUID, v))
}

// DeviceUUIDHasPrefix applies the HasPrefix predicate on the "device_uuid" field.
func DeviceUUIDHasPrefix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasPrefix(FieldDeviceUUID, v))
}

// DeviceUUIDHasSuffix applies the HasSuffix predicate on the "device_uuid" field.
func DeviceUUIDHasSuffix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasSuffix(FieldDeviceUUID, v))
}

// DeviceUUIDEqualFold applies the EqualFold predicate on the "device_uuid" field.
func DeviceUUIDEqualFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEqualFold(FieldDeviceUUID, v))
}

// DeviceUUIDContainsFold applies the ContainsFold predicate on the "device_uuid" field.
func DeviceUUIDContainsFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContainsFold(FieldDeviceUUID, v))
}

// EventTypeEQ applies the EQ predicate on the "event_type" field.
func EventTypeEQ(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldEventType, v))
}

// EventTypeNEQ applies the NEQ predicate on the "event_type" field.
func EventTypeNEQ(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldEventType, v))
}

// EventTypeIn applies the In predicate on the "event_type" field.
func EventTypeIn(vs ...uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldEventType, vs...))
}

// EventTypeNotIn applies the NotIn predicate on the "event_type" field.
func EventTypeNotIn(vs ...uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldEventType, vs...))
}

// EventTypeGT applies the GT predicate on the "event_type" field.
func EventTypeGT(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldEventType, v))
}

// EventTypeGTE applies the GTE predicate on the "event_type" field.
func EventTypeGTE(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldEventType, v))
}

// EventTypeLT applies the LT predicate on the "event_type" field.
func EventTypeLT(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldEventType, v))
}

// EventTypeLTE applies the LTE predicate on the "event_type" field.
func EventTypeLTE(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldEventType, v))
}

// TimestampEQ applies the EQ predicate on the "timestamp" field.
func TimestampEQ(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldTimestamp, v))
}

// TimestampNEQ applies the NEQ predicate on the "timestamp" field.
func TimestampNEQ(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldTimestamp, v))
}

// TimestampIn applies the In predicate on the "timestamp" field.
func TimestampIn(vs ...int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldTimestamp, vs...))
}

// TimestampNotIn applies the NotIn predicate on the "timestamp" field.
func TimestampNotIn(vs ...int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldTimestamp, vs...))
}

// TimestampGT applies the GT predicate on the "timestamp" field.
func TimestampGT(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldTimestamp, v))
}

// TimestampGTE applies the GTE predicate on the "timestamp" field.
func TimestampGTE(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldTimestamp, v))
}

// TimestampLT applies the LT predicate on the "timestamp" field.
func TimestampLT(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldTimestamp, v))
}

// TimestampLTE applies the LTE predicate on the "timestamp" field.
func TimestampLTE(v int64) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldTimestamp, v))
}

// HistoryTagEQ applies the EQ predicate on the "history_tag" field.
func HistoryTagEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldHistoryTag, v))
}

// HistoryTagNEQ applies the NEQ predicate on the "history_tag" field.
func HistoryTagNEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldHistoryTag, v))
}

// HistoryTagIn applies the In predicate on the "history_tag" field.
func HistoryTagIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldHistoryTag, vs...))
}

// HistoryTagNotIn applies the NotIn predicate on the "history_tag" field.
func HistoryTagNotIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldHistoryTag, vs...))
}

// HistoryTagGT applies the GT predicate on the "history_tag" field.
func HistoryTagGT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldHistoryTag, v))
}

// HistoryTagGTE applies the GTE predicate on the "history_tag" field.
func HistoryTagGTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldHistoryTag, v))
}

// HistoryTagLT applies the LT predicate on the "history_tag" field.
func HistoryTagLT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldHistoryTag, v))
}

// HistoryTagLTE applies the LTE predicate on the "history_tag" field.
func HistoryTagLTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldHistoryTag, v))
}

// HistoryTagContains applies the Contains predicate on the "history_tag" field.
func HistoryTagContains(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContains(FieldHistoryTag, v))
}

// HistoryTagHasPrefix applies the HasPrefix predicate on the "history_tag" field.
func HistoryTagHasPrefix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasPrefix(FieldHistoryTag, v))
}

// HistoryTagHasSuffix applies the HasSuffix predicate on the "history_tag" field.
func HistoryTagHasSuffix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasSuffix(FieldHistoryTag, v))
}

// HistoryTagEqualFold applies the EqualFold predicate on the "history_tag" field.
func HistoryTagEqualFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEqualFold(FieldHistoryTag, v))
}

// HistoryTagContainsFold applies the ContainsFold predicate on the "history_tag" field.
func HistoryTagContainsFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContainsFold(FieldHistoryTag, v))
}

// RecordIDEQ applies the EQ predicate on the "record_id" field.
func RecordIDEQ(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldRecordID, v))
}

// RecordIDNEQ applies the NEQ predicate on the "record_id" field.
func RecordIDNEQ(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldRecordID, v))
}

// RecordIDIn applies the In predicate on the "record_id" field.
func RecordIDIn(vs ...uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldRecordID, vs...))
}

// RecordIDNotIn applies the NotIn predicate on the "record_id" field.
func RecordIDNotIn(vs ...uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldRecordID, vs...))
}

// RecordIDGT applies the GT predicate on the "record_id" field.
func RecordIDGT(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldRecordID, v))
}

// RecordIDGTE applies the GTE predicate on the "record_id" field.
func RecordIDGTE(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldRecordID, v))
}

// RecordIDLT applies the LT predicate on the "record_id" field.
func RecordIDLT(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldRecordID, v))
}

// RecordIDLTE applies the LTE predicate on the "record_id" field.
func RecordIDLTE(v uint) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldRecordID, v))
}

// ParameterEQ applies the EQ predicate on the "parameter" field.
func ParameterEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldParameter, v))
}

// ParameterNEQ applies the NEQ predicate on the "parameter" field.
func ParameterNEQ(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldParameter, v))
}

// ParameterIn applies the In predicate on the "parameter" field.
func ParameterIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldParameter, vs...))
}

// ParameterNotIn applies the NotIn predicate on the "parameter" field.
func ParameterNotIn(vs ...string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldParameter, vs...))
}

// ParameterGT applies the GT predicate on the "parameter" field.
func ParameterGT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldParameter, v))
}

// ParameterGTE applies the GTE predicate on the "parameter" field.
func ParameterGTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldParameter, v))
}

// ParameterLT applies the LT predicate on the "parameter" field.
func ParameterLT(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldParameter, v))
}

// ParameterLTE applies the LTE predicate on the "parameter" field.
func ParameterLTE(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldParameter, v))
}

// ParameterContains applies the Contains predicate on the "parameter" field.
func ParameterContains(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContains(FieldParameter, v))
}

// ParameterHasPrefix applies the HasPrefix predicate on the "parameter" field.
func ParameterHasPrefix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasPrefix(FieldParameter, v))
}

// ParameterHasSuffix applies the HasSuffix predicate on the "parameter" field.
func ParameterHasSuffix(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldHasSuffix(FieldParameter, v))
}

// ParameterEqualFold applies the EqualFold predicate on the "parameter" field.
func ParameterEqualFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEqualFold(FieldParameter, v))
}

// ParameterContainsFold applies the ContainsFold predicate on the "parameter" field.
func ParameterContainsFold(v string) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldContainsFold(FieldParameter, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.DeviceHistory) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.DeviceHistory) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.DeviceHistory) predicate.DeviceHistory {
	return predicate.DeviceHistory(sql.NotPredicates(p))
}
